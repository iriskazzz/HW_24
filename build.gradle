plugins {
    id 'java-library'
    id 'io.qameta.allure' version '2.11.2'
}

repositories {
    mavenCentral()
}

def allureVersion = "2.21.0"

allure {
    report {
        version.set(allureVersion)
    }
    adapter {
        aspectjWeaver.set(true)
        frameworks {
            junit5 {
                adapterVersion.set(allureVersion)
            }
        }
    }
}

dependencies {
    testImplementation(
            'com.codeborne:selenide:6.13.0',
            "io.qameta.allure:allure-selenide:$allureVersion",
            'io.appium:java-client:8.3.0',
            'io.rest-assured:rest-assured:5.3.0',
            "commons-io:commons-io:2.11.0",
            'org.junit.jupiter:junit-jupiter:5.9.3',
            'org.slf4j:slf4j-simple:2.0.7',
            'org.aeonbits.owner:owner:1.0.12'
    )
}

tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        lifecycle {
            events "started", "skipped", "failed", "standard_error", "standard_out"
            exceptionFormat "short"
        }
    }
}

tasks.register("testByTags", Test) {
    systemProperties(System.getProperties())
    useJUnitPlatform {
        def tags = System.getProperty("tags", "")
        tags.split(",").each { String str ->
            def tag = str.trim()
            if (tag != "") includeTags(tag)
        }
    }
}